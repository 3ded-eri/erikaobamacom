---
import timelineData from './timelineData.json';
---

<ul class="timeline">
    {timelineData.map((timeline) => {
        return (
    <li>
        <div class="job-info intersect fade-down intersect-once">
            <span class="year intersect fade-down intersect-once">{timeline.year}</span>
            <p class="job-title intersect fade-right intersect-once">{ Astro.currentLocale === "ja"
        ? `${timeline.titleJa}` : `${timeline.title}`}
                <span class="location">({ Astro.currentLocale === "ja"
        ? `${timeline.locationJa}` : `${timeline.location}`} | { Astro.currentLocale === "ja"
        ? `${timeline.contractJa}` : `${timeline.contract}`})</span>
            </p>
        </div>
        <div class="job-desc intersect fade-down intersect-once">
            { Astro.currentLocale === "ja" ? (
                <span>{timeline.tagsJa.map((tag) => (<span class="tag intersect fade-right intersect-once">#{tag}</span>))}</span>
                ) : (
                <span>{timeline.tags.map((tag) => (<span class="tag intersect fade-right intersect-once">#{tag}</span>))}</span>
            )}
            <p class="duration intersect fade-right intersect-once">{ Astro.currentLocale === "ja"
        ? `${timeline.durationJa}` : `${timeline.duration}`}</p>
            <div class="job-summary intersect fade-right intersect-once">
                { Astro.currentLocale === "ja" ? (
                <ul  class="responsibilities intersect fade-right intersect-once">業務内容： {timeline.responsibilitiesJa.map((responsibility) => (<li class="intersect fade-right intersect-once">{responsibility}</li>))}</ul>
                ) : (
                <ul  class="responsibilities intersect fade-right intersect-once">{timeline.multiResponsibilities === true ? "Responsibilities" : "Responsibility"} : {timeline.responsibilities.map((responsibility) => (<li class="intersect fade-right intersect-once">{responsibility}</li>))}</ul>
                )}
                {timeline.works != null && timeline.worktype === "image" ? (
                    <p class="works">
                        {timeline.works.map((work) => (
                            <img src=`/src/images/portfolio/${work.url}.${work.syntax}` class="w-auto max-w-48" data-toggle="modal" data-target=`#modal-${timeline.code}-${work.url}` aria-expanded="false" aria-haspopup="dialog" />
                        ))}
                    </p>
                    
                ) : timeline.works != null && timeline.worktype === "video" ? (
                    <p class="works">
                        {timeline.works.map((work) => (
                            <img src=`/src/images/portfolio/${work.url}_thumb.webp` class="w-auto max-w-64" data-toggle="modal" data-target=`#modal-${timeline.code}-${work.url}` aria-expanded="false" aria-haspopup="dialog" />
                        ))}
                    </p>
                ) : (
                    ""
                )}
            </div>
        </div>
                {timeline.works != null && timeline.worktype === "image" ? (
                    <div>
                        {timeline.works.map((work) => (
                            <div class="fixed antialiased inset-0 w-screen bg-slate-800 bg-opacity-75 flex justify-center items-center opacity-0 pointer-events-none transition-opacity duration-300 ease-out z-[9999]" id=`modal-${timeline.code}-${work.url}`  aria-hidden="true">
                                <div class="bg-white p-4 max-h-[calc(100vh-5rem)] overflow-auto rounded-lg scale-95 transition-transform duration-300 ease-out">
                                    <img src=`/src/images/portfolio/${work.url}.${work.syntax}` class="w-auto max-w-[calc(100vw-10rem)] h-auto max-h-[calc(100vh-10rem)] mb-2 last:mb-0" />
                                </div>
                            </div>
                        ))}
                    </div>
                ) : timeline.works != null && timeline.worktype === "video" ? (
                    <div>
                        {timeline.works.map((work) => (
                            <div class="fixed antialiased inset-0 bg-slate-800 bg-opacity-75 flex justify-center items-center opacity-0 pointer-events-none transition-opacity duration-300 ease-out z-[9999]" id=`modal-${timeline.code}-${work.url}`  aria-hidden="true">
                                <div class="bg-white p-4 max-h-[calc(100vh-5rem)] overflow-auto rounded-lg scale-95 transition-transform duration-300 ease-out">
                                    <video src=`/src/images/portfolio/${work.url}.${work.syntax}` autoplay loop></video>
                                </div>
                            </div>
                        ))}
                    </div>
                ) : (
                    ""
            )}
    </li>
            );
      })
    }
</ul>

<script src="https://unpkg.com/@material-tailwind/html@3.0.0-beta.7/dist/material-tailwind.umd.min.js" defer></script>


<style>
    ul.timeline, 
    ul.timeline li,
    .job-info {
        @apply
        gap-x-4
    }
    .year {
        width: 4ch;
    }
    .job-info,
    .job-summary {
        @apply
        flex
    }
    .job-info {
        @apply
        items-center
        py-2
    }
    .job-title {
        @apply
        pb-0
        text-xl
    }
    .location {
        @apply
        text-sm
    }
    .year, 
    .job-title, 
    .location {
        font-family: "heading", "heading-ja", sans-serif;
    }
    .duration {
        @apply
        pt-2
        pb-1
        text-sm
    }
    .responsibilities {
        font-family: "heading", "heading-ja", sans-serif;
        @apply
        pb-4
        list-disc
        list-outside
        text-sm
        font-semibold
    }
    .responsibilities li {
        font-family: "reading", sans-serif;
        @apply
        font-normal
        ml-4
    }
    .job-summary {
        @apply
        flex-col
        md:flex-row
        basis-full
        gap-x-8
        items-start
    }
    .job-summary .works {
        @apply
        flex
        flex-wrap
        basis-full
        gap-3
        items-center 
        cursor-pointer
    }
    .job-desc {
        border-color: var(--hl-purple-dk);
        @apply
        font-normal
        border-l-4
        ml-4
        pl-8
    }
</style>